#lang racket

(define (good-enough? guess x)
(< (abs (- (expt guess 2) x)) 0.000000001))

(define (improve guess x)
(average guess (/ x guess)))

(define (average x y)
(/ (+ x y) 2))

(define (sqrt-iter guess x)
(if (good-enough? guess x)
guess
(sqrt-iter (improve guess x)
x)))

(define (sqrt x)
  (sqrt-iter 1.0 x))

(sqrt 2)