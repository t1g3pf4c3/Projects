
#include <iostream>
#include "Str.h"
#include <cstring>

using namespace std;

int main(){  
    
    cout << "создали объект"<< endl;
    
    
    Str b("mm");
    
    
    cout << strlen(b) << " длинна" << endl;
    
    char * i = NULL;
    
    Str z                (i);


    //2 
    Str s = "123";
    cout << s <<endl; //inline ostream& operator << (ostream& o, const Str& c)  cout вызывает данную функцию 
    ///3
    cout << "Длина строки " << strlen(s) << endl; // данная функция принимает const char *   ->operator const char* функция в классе


    //4
    s.Test(s);
    //5 При передаче s она берет копию объекта, так как функция в TEST принимает s а не &s, что требует независимого объекта, который можно менять 



    //6 Если конструктор присваивания не инициализирован, то он выдает ошибку
    cout << "конструктор присваивания не инициализирован" << endl;
    Str t;
     cout << "Где ошибка?" << endl;
    t = s;
    cout << s << endl;
    cout << t << endl;
    //t = s = t; присваивает s значение t, а после t значения s



    //8.	Самостоятельно разработайте оператор +=, который добавляет в конец строки объекта, строку, переданную в качестве параметра.
    //    Str& operator +=(const char* sz)

    //лучше использовать z- строку, так как в функцию сразу передается строка, остатется только поменять переменную к которой мы применяем оператор, и вернуть его, удалять ничего не нужно
    
    Str k="4444";
    
    cout << "плюсуем" << endl;
    s += k;
    cout << s << endl;
    //9
    cout << "слева " << k +s<< endl;
    cout <<  "справа " << k +s<< endl;



    //cout << endl;
    //Str* k = new Str("123");
    //cout << *k << endl;    КАК С ЭТИМ ОБРАЩАТЬСЯ?
    return 0;
}


